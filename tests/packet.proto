syntax = "proto3";

package tests;

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "ras.proto";
import "serialize/cluster.proto";

option csharp_namespace = "ras.protocol.v1";
option go_package = "github.com/v8platform/protoc-gen-go-ras/tests/gen";

// Порядок кодирования/декодирования в формат RAS
message Packet {

  PacketType type = 1 [(ras.encoding.field) = {
      encoder: "byte",
      order: 1,
    }
  ];

  int32 size = 2 [(ras.encoding.field) = {
      encoder: "size",
      order: 2,
    }];

  bytes data = 3 [(ras.encoding.field) = {
      encoder: "bytes",
      order: 3,
      size_field: 2,
      version: 3,
    }];

  repeated  v8platform.serialize.v1.ClusterInfo clusters = 4 [(ras.encoding.field) = {
    order: 4,
    version: 3,
  }];

  repeated int32 ints = 5 [(ras.encoding.field) = {
    order: 5,
    version: 3,
  }];
}


enum PacketType {
  PACKET_TYPE_NEGOTIATE = 0 [(ras.encoding.type_url) = "ras.protocol.v1.NegotiateMessage"];
  PACKET_TYPE_CONNECT = 1 [(ras.encoding.type_url) = "ras.protocol.v1.ConnectMessage"];
  PACKET_TYPE_CONNECT_ACK = 2 [(ras.encoding.type_url) = "ras.protocol.v1.ConnectMessageAck"];
  PACKET_TYPE_DISCONNECT = 4 [(ras.encoding.type_url) = "ras.protocol.v1.DisconnectMessage"];
  reserved 3, 5 to 10;
  reserved "PACKET_TYPE_START_TLS", "PACKET_TYPE_SASL_NEGOTIATE", "PACKET_TYPE_SASL_AUTH", "PACKET_TYPE_SASL_CHALLENGE";
  reserved "PACKET_TYPE_SASL_SUCCESS", "PACKET_TYPE_SASL_FAILURE", "PACKET_TYPE_SASL_ABORT";
  PACKET_TYPE_ENDPOINT_OPEN = 11 [(ras.encoding.type_url) = "ras.protocol.v1.EndpointOpen"];
  PACKET_TYPE_ENDPOINT_OPEN_ACK = 12 [(ras.encoding.type_url) = "ras.protocol.v1.EndpointOpenAck"];
  PACKET_TYPE_ENDPOINT_CLOSE = 13 [(ras.encoding.type_url) = "ras.protocol.v1.EndpointOClose"];
  PACKET_TYPE_ENDPOINT_MESSAGE = 14 [(ras.encoding.type_url) = "ras.protocol.v1.EndpointMessage"];
  PACKET_TYPE_ENDPOINT_FAILURE = 15 [(ras.encoding.type_url) = "ras.protocol.v1.EndpointFailure"];
  PACKET_TYPE_KEEP_ALIVE = 16;
}

