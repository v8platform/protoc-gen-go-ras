syntax = "proto3";

package ras.messages.v1;

import "ras.proto";
import "ras/serialize/v1/clusters.proto";

option csharp_namespace = "ras.messages.v1";
option go_package = "github.com/v8platform/protoc-gen-go-ras/tests/gen/ras/messages/v1";

message GetClustersRequest {
  option (ras.encoding.options).message_type = "GET_CLUSTERS_REQUEST";
  option (ras.encoding.options).generate_empty = true;
}

message GetClustersResponse {
  option (ras.encoding.options).message_type = "GET_CLUSTERS_RESPONSE";
  repeated v8platform.serialize.v1.ClusterInfo clusters = 1 [(ras.encoding.field) = {
    order: 1,
  }];;
}

message GetClusterInfoRequest {
  option (ras.encoding.options).message_type = "GET_CLUSTER_INFO_REQUEST";
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"}];
}

message GetClusterInfoResponse {
  option (ras.encoding.options).message_type = "GET_CLUSTER_INFO_RESPONSE";
  v8platform.serialize.v1.ClusterInfo cluster_info = 1 [(ras.encoding.field).order = 1];
}

message RegClusterRequest {
  option (ras.encoding.options).message_type = "REG_CLUSTER_REQUEST";
  v8platform.serialize.v1.ClusterInfo cluster_info = 1 [(ras.encoding.field).order = 1];
}

message RegClusterResponse {
  option (ras.encoding.options).message_type = "REG_CLUSTER_RESPONSE";
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"}];
}

message UnregClusterRequest  {
  option (ras.encoding.options).message_type = "UNREG_CLUSTER_REQUEST";
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"}];
}

